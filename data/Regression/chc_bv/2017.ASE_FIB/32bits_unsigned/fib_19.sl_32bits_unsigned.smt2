(set-logic HORN)
(declare-fun inv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) ) Bool)
(assert (forall ((n (_ BitVec 32)) (m (_ BitVec 32)) (x (_ BitVec 32)) (y (_ BitVec 32))) 
       (=> ( and ( bvuge n (_ bv0 32) ) ( bvuge m (_ bv0 32) ) ( bvult m n ) ( = x (_ bv0 32) ) ( = y m ) ) (inv n m x y))))
(assert (forall ((n (_ BitVec 32)) (m (_ BitVec 32)) (x (_ BitVec 32)) (y (_ BitVec 32)) (n! (_ BitVec 32)) (m! (_ BitVec 32)) (x! (_ BitVec 32)) (y! (_ BitVec 32))) 
       (=> (and (inv n m x y) ( or ( and ( bvult x n ) ( bvule ( bvadd x (_ bv1 32) ) m ) ( = x! ( bvadd x (_ bv1 32) ) ) ( = y! y ) ( = n! n ) ( = m! m ) ) ( and ( bvult x n ) ( bvugt ( bvadd x (_ bv1 32) ) m ) ( = x! ( bvadd x (_ bv1 32) ) ) ( = y! ( bvadd y (_ bv1 32) ) ) ( = n! n ) ( = m! m ) ) ( and ( bvuge x n ) ( = x! x ) ( = y! y ) ( = n! n ) ( = m! m ) ) )) (inv n! m! x! y!))))
(assert (forall ((n (_ BitVec 32)) (m (_ BitVec 32)) (x (_ BitVec 32)) (y (_ BitVec 32))) 
       (=> (inv n m x y) ( => ( not ( bvult x n ) ) ( = y n ) ))))
(check-sat)
