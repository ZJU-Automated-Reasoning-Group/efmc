(set-logic HORN)
(declare-fun inv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8) ) Bool)
(assert (forall ((b (_ BitVec 8)) (j (_ BitVec 8)) (n (_ BitVec 8)) (flag (_ BitVec 8))) 
       (=> ( and ( = j (_ bv0 8) ) ( bvsgt n (_ bv0 8) ) ( = b (_ bv0 8) ) ) (inv b j n flag))))
(assert (forall ((b (_ BitVec 8)) (j (_ BitVec 8)) (n (_ BitVec 8)) (flag (_ BitVec 8)) (b! (_ BitVec 8)) (j! (_ BitVec 8)) (n! (_ BitVec 8)) (flag! (_ BitVec 8))) 
       (=> (and (inv b j n flag) ( or ( and ( bvslt b n ) ( = flag (_ bv1 8) ) ( = j! ( bvadd j (_ bv1 8) ) ) ( = b! ( bvadd b (_ bv1 8) ) ) ( = n! n ) ( = flag! flag ) ) ( and ( bvslt b n ) ( not ( = flag (_ bv1 8) ) ) ( = j! j ) ( = b! ( bvadd b (_ bv1 8) ) ) ( = n! n ) ( = flag! flag ) ) ( and ( bvsge b n ) ( = j! j ) ( = b! b ) ( = n! n ) ( = flag! flag ) ) )) (inv b! j! n! flag!))))
(assert (forall ((b (_ BitVec 8)) (j (_ BitVec 8)) (n (_ BitVec 8)) (flag (_ BitVec 8))) 
       (=> (inv b j n flag) ( => ( not ( bvslt b n ) ) ( or ( not ( = flag (_ bv1 8) ) ) ( = j n ) ) ))))
(check-sat)
