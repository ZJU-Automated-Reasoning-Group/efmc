(set-logic HORN)
(declare-fun inv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8) ) Bool)
(assert (forall ((i (_ BitVec 8)) (pvlen (_ BitVec 8)) (t (_ BitVec 8)) (k (_ BitVec 8)) (n (_ BitVec 8)) (j (_ BitVec 8)) (turn (_ BitVec 8))) 
       (=> ( and ( = k (_ bv0 8) ) ( = i (_ bv0 8) ) ( = turn (_ bv0 8) ) ) (inv i pvlen t k n j turn))))
(assert (forall ((i (_ BitVec 8)) (pvlen (_ BitVec 8)) (t (_ BitVec 8)) (k (_ BitVec 8)) (n (_ BitVec 8)) (j (_ BitVec 8)) (turn (_ BitVec 8)) (i! (_ BitVec 8)) (pvlen! (_ BitVec 8)) (t! (_ BitVec 8)) (k! (_ BitVec 8)) (n! (_ BitVec 8)) (j! (_ BitVec 8)) (turn! (_ BitVec 8))) 
       (=> (and (inv i pvlen t k n j turn) ( or ( and ( = turn (_ bv0 8) ) ( = i! ( bvadd i (_ bv1 8) ) ) ( = pvlen! pvlen ) ( = t! t ) ( = k! k ) ( = n! n ) ( = j! j ) ( = turn! (_ bv0 8) ) ) ( and ( = turn (_ bv0 8) ) ( = i! ( bvadd i (_ bv1 8) ) ) ( = pvlen! pvlen ) ( = t! t ) ( = k! k ) ( = n! n ) ( = j! j ) ( = turn! (_ bv1 8) ) ) ( and ( = turn (_ bv1 8) ) ( bvsgt i pvlen ) ( = i! (_ bv0 8) ) ( = pvlen! i ) ( = t! t ) ( = k! k ) ( = n! n ) ( = j! j ) ( = turn! (_ bv2 8) ) ) ( and ( = turn (_ bv1 8) ) ( bvsle i pvlen ) ( = i! (_ bv0 8) ) ( = pvlen! pvlen ) ( = t! t ) ( = k! k ) ( = n! n ) ( = j! j ) ( = turn! (_ bv2 8) ) ) ( and ( = turn (_ bv2 8) ) ( = i! ( bvadd i (_ bv1 8) ) ) ( = pvlen! pvlen ) ( = t! i ) ( = k! ( bvadd k (_ bv1 8) ) ) ( = n! n ) ( = j! j ) ( = turn! (_ bv2 8) ) ) ( and ( = turn (_ bv2 8) ) ( = i! ( bvadd i (_ bv1 8) ) ) ( = pvlen! pvlen ) ( = t! i ) ( = k! ( bvadd k (_ bv1 8) ) ) ( = n! n ) ( = j! j ) ( = turn! (_ bv3 8) ) ) ( and ( = turn (_ bv3 8) ) ( = i! i ) ( = pvlen! pvlen ) ( = t! t ) ( = k! k ) ( = n! n ) ( = j! j ) ( = turn! (_ bv3 8) ) ) ( and ( = turn (_ bv3 8) ) ( = i! i ) ( = pvlen! pvlen ) ( = t! t ) ( = k! k ) ( = n! n ) ( = j! j ) ( = turn! (_ bv4 8) ) ) ( and ( = turn (_ bv4 8) ) ( = i! i ) ( = pvlen! pvlen ) ( = t! t ) ( = k! k ) ( = n! i ) ( = j! (_ bv0 8) ) ( = turn! (_ bv5 8) ) ) )) (inv i! pvlen! t! k! n! j! turn!))))
(assert (forall ((i (_ BitVec 8)) (pvlen (_ BitVec 8)) (t (_ BitVec 8)) (k (_ BitVec 8)) (n (_ BitVec 8)) (j (_ BitVec 8)) (turn (_ BitVec 8))) 
       (=> (inv i pvlen t k n j turn) ( bvsge k (_ bv0 8) ))))
(check-sat)
