(declare-const _a_0_ Real)
(declare-const _a_1_ Real)
(declare-const _a_2_ Real)
(declare-const _a_3_ Real)
(declare-const _a_4_ Real)
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 N_0) (* -2. 1) (* -1 (*  R_0   R_0  )) (* 2. R_0) ) 0)(>= (+ (* 1 (*  R_0   R_0  )) (* -1 N_0) ) 0)) (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 N_0) (* -2. 1) (* -1 (*  R_0   R_0  )) (* 2. R_0) ) 0)(>= (+ (* 1 (*  R_0   R_0  )) (* -1 N_0) ) 0)) (and (>= (+ (* 0 (*  R_0   R_0  )) (* 0 R_0) (* 0 1) (* 0 N_0) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 N_0) (* -2. 1) (* -1 (*  R_0   R_0  )) (* 2. R_0) ) 0)(>= (+ (* 1 (*  R_0   R_0  )) (* -1 N_0) ) 0)) (and (>= (+ (* 0 N_0) (* 0 (*  R_0   R_0  )) (* 0 R_0) (* 0 1) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (* -1. 1)  0)) (and (>= (* 1. 1)  0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (+ (* 0 1) (* -1 r_0) ) 0)) (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (+ (* 0 1) (* -1 r_0) ) 0)) (and (>= (+ (* 1 (*  u_0   u_0  )) (* (+ 2. (* -4. _a_3_)) u_0) (* (* -4. _a_2_) 1) (* -1 (*  v_0   v_0  )) (* 2. v_0) (* -4. N_0) (* (* -4. _a_4_) r_0) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (+ (* 0 1) (* -1 r_0) ) 0)) (and (>= (+ (* 4. N_0) (* (* 4. _a_2_) 1) (* (+ -2. (* 4. _a_3_)) u_0) (* (* 4. _a_4_) r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* -2. v_0) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (* 1 r_0)  0)) (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (* 1 r_0)  0)) (and (>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (* 1 r_0)  0)) (and (>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (* 1. 1)  0)) (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (* 1. 1)  0)) (and (>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (* 1. 1)  0)) (and (>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (* -1 r_0)  0)) (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (* -1 r_0)  0)) (and (>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (* -1 r_0)  0)) (and (>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (+ (* 1 r_0) (* 0 1) ) 0)) (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (+ (* 1 r_0) (* 0 1) ) 0)) (and (>= (+ (* 1 (*  u_0   u_0  )) (* (+ (* -1 (*  _a_0_   _a_0_  )) (* 2. _a_0_)) 1) (* (+ 4. (* 2. _a_1_) (* -2 _a_0_ _a_1_)) v_0) (* (* -1 (*  _a_1_   _a_1_  )) (*  v_0   v_0  )) (* -2. u_0) (* -4. N_0) (* -4. r_0) ) 0)))))
(assert (forall ((u_0 Real) (v_0 Real) (N_0 Real) (r_0 Real) (R_0 Real) ) (=> (and (>= (+ (* 1 N_0) (* -1. 1) ) 0)(>= (+ (* 1 (*  u_0   u_0  )) (* -1 (*  v_0   v_0  )) (* -2. u_0) (* 2. v_0) (* -4. N_0) (* -4. r_0) ) 0)(>= (+ (* 4. N_0) (* 4. r_0) (* -1 (*  u_0   u_0  )) (* 1 (*  v_0   v_0  )) (* 2. u_0) (* -2. v_0) ) 0)(>= (+ (* 1 r_0) (* 0 1) ) 0)) (and (>= (+ (* 4. N_0) (* 4. r_0) (* (+ -4. (* -2. _a_1_) (* 2 _a_0_ _a_1_)) v_0) (* -1 (*  u_0   u_0  )) (* (+ (*  _a_0_   _a_0_  ) (* -2. _a_0_)) 1) (* (*  _a_1_   _a_1_  ) (*  v_0   v_0  )) (* 2. u_0) ) 0)))))
(check-sat)
(get-model)

