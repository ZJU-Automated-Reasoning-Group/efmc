(declare-const c_0 Real)
(declare-const c_1 Real)
(declare-const c_2 Real)
(declare-const c_3 Real)
(declare-const c_4 Real)
(declare-const c_5 Real)
(declare-const c_6 Real)
(declare-const c_7 Real)
(declare-const c_8 Real)
(declare-const c_9 Real)
(declare-const c_10 Real)
(declare-const c_11 Real)
(declare-const c_12 Real)
(declare-const c_13 Real)
(declare-const c_14 Real)
(declare-const c_15 Real)
(declare-const c_16 Real)
(declare-const c_17 Real)
(declare-const c_18 Real)
(declare-const c_19 Real)
(declare-const c_20 Real)
(declare-const c_21 Real)
(declare-const c_22 Real)
(declare-const c_23 Real)
(declare-const c_24 Real)
(declare-const c_25 Real)
(declare-const c_26 Real)
(declare-const c_27 Real)
(declare-const c_28 Real)
(declare-const c_29 Real)
(assert (forall ((x Real) ) (=> (and (>= (* 1 1) 0) (>= (+ (* 7 1) (* (- 1) x ) ) 0) (>= (+ (* 6 1) (* 1 x ) ) 0) (>= (* (- 1) x ) 0) (>= (* 1 x ) 0) ) (>= (+ (* 1 c_0 ) (* 1 c_1 x ) (* 1 c_2 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 5 1) (* 1 x ) ) 0) (>= (+ (* 5 1) (* (- 1) x ) ) 0) (>= (* 1 1) 0) (>= (+ (* 7 1) (* (- 1) x ) ) 0) (>= (+ (* 6 1) (* 1 x ) ) 0) ) (>= (+ (* (- 1) 1) (* 1 c_0 ) (* 1 c_1 x ) (* 1 c_2 x x ) (* (- 1) c_3 ) (* (- 1) c_4 x ) (* (- 1) c_5 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 5 1) (* 1 x ) ) 0) (>= (+ (* 5 1) (* (- 1) x ) ) 0) (>= (* 1 1) 0) (>= (+ (* 7 1) (* (- 1) x ) ) 0) (>= (+ (* 6 1) (* 1 x ) ) 0) ) (>= (+ (* 1 c_3 ) (* 1 c_4 x ) (* 1 c_5 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* (- 5) 1) (* (- 1) x ) ) 0) (>= (* 1 1) 0) (>= (+ (* 7 1) (* (- 1) x ) ) 0) (>= (+ (* 6 1) (* 1 x ) ) 0) ) (>= (+ (* (- 1) 1) (* 1 c_0 ) (* 1 c_1 x ) (* 1 c_2 x x ) (* (- 1) c_27 ) (* (- 1) c_28 x ) (* (- 1) c_29 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* (- 5) 1) (* (- 1) x ) ) 0) (>= (* 1 1) 0) (>= (+ (* 7 1) (* (- 1) x ) ) 0) (>= (+ (* 6 1) (* 1 x ) ) 0) ) (>= (+ (* 1 c_27 ) (* 1 c_28 x ) (* 1 c_29 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* (- 5) 1) (* 1 x ) ) 0) (>= (* 1 1) 0) (>= (+ (* 7 1) (* (- 1) x ) ) 0) (>= (+ (* 6 1) (* 1 x ) ) 0) ) (>= (+ (* (- 1) 1) (* 1 c_0 ) (* 1 c_1 x ) (* 1 c_2 x x ) (* (- 1) c_27 ) (* (- 1) c_28 x ) (* (- 1) c_29 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* (- 5) 1) (* 1 x ) ) 0) (>= (* 1 1) 0) (>= (+ (* 7 1) (* (- 1) x ) ) 0) (>= (+ (* 6 1) (* 1 x ) ) 0) ) (>= (+ (* 1 c_27 ) (* 1 c_28 x ) (* 1 c_29 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 5 1) (* (- 1) x ) ) 0) (>= (+ (* 5 1) (* 1 x ) ) 0) ) (>= (+ (* (/ (- 4) 5) c_15 ) (* (/ (- 4) 5) c_16 x ) (* (/ (- 4) 5) c_17 x x ) (* 1 c_3 ) (* 1 c_4 x ) (* 1 c_5 x x ) (* (/ (- 1) 5) c_6 ) (* (/ (- 1) 5) c_7 x ) (* (/ (- 1) 5) c_8 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 5 1) (* (- 1) x ) ) 0) (>= (+ (* 5 1) (* 1 x ) ) 0) ) (>= (+ (* (/ 4 5) c_15 ) (* (/ 4 5) c_16 x ) (* (/ 4 5) c_17 x x ) (* (/ 1 5) c_6 ) (* (/ 1 5) c_7 x ) (* (/ 1 5) c_8 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 5 1) (* (- 1) x ) ) 0) (>= (+ (* 5 1) (* 1 x ) ) 0) ) (>= (+ (* (/ (- 1) 2) c_10 x ) (* (/ (- 1) 2) c_11 x x ) (* (/ (- 1) 2) c_12 ) (* (/ (- 1) 2) c_13 x ) (* (/ (- 1) 2) c_14 x x ) (* 1 c_6 ) (* 1 c_7 x ) (* 1 c_8 x x ) (* (/ (- 1) 2) c_9 ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 5 1) (* (- 1) x ) ) 0) (>= (+ (* 5 1) (* 1 x ) ) 0) ) (>= (+ (* (/ 1 2) c_10 x ) (* (/ 1 2) c_11 x x ) (* (/ 1 2) c_12 ) (* (/ 1 2) c_13 x ) (* (/ 1 2) c_14 x x ) (* (/ 1 2) c_9 ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 5 1) (* (- 1) x ) ) 0) (>= (+ (* 5 1) (* 1 x ) ) 0) ) (>= (+ (* (- 1) 1) (* 1 c_10 x ) (* 1 c_11 x x ) (* (- 1) c_15 ) (* (- 1) c_16 ) (* (- 1) c_16 x ) (* (- 1) c_17 ) (* (- 2) c_17 x ) (* (- 1) c_17 x x ) (* 1 c_9 ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 5 1) (* (- 1) x ) ) 0) (>= (+ (* 5 1) (* 1 x ) ) 0) ) (>= (+ (* 1 c_15 ) (* 1 c_16 x ) (* 1 c_17 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 5 1) (* (- 1) x ) ) 0) (>= (+ (* 5 1) (* 1 x ) ) 0) ) (>= (+ (* (- 1) 1) (* 1 c_12 ) (* 1 c_13 x ) (* 1 c_14 x x ) (* (- 1) c_15 ) (* (- 2) c_16 ) (* (- 1) c_16 x ) (* (- 4) c_17 ) (* (- 4) c_17 x ) (* (- 1) c_17 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 5 1) (* (- 1) x ) ) 0) (>= (+ (* 5 1) (* 1 x ) ) 0) ) (>= (+ (* 1 c_15 ) (* 1 c_16 x ) (* 1 c_17 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 7 1) (* (- 1) x ) ) 0) (>= (+ (* 5 1) (* 1 x ) ) 0) ) (>= (+ (* (- 1) 1) (* 1 c_15 ) (* 1 c_16 x ) (* 1 c_17 x x ) (* (- 1) c_18 ) (* (- 1) c_19 x ) (* (- 1) c_20 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 7 1) (* (- 1) x ) ) 0) (>= (+ (* 5 1) (* 1 x ) ) 0) ) (>= (+ (* 1 c_18 ) (* 1 c_19 x ) (* 1 c_20 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 7 1) (* (- 1) x ) ) 0) (>= (+ (* 5 1) (* 1 x ) ) 0) ) (>= (+ (* 1 c_18 ) (* 1 c_19 x ) (* 1 c_20 x x ) (* (/ (- 7) 8) c_21 ) (* (/ (- 7) 8) c_22 x ) (* (/ (- 7) 8) c_23 x x ) (* (/ (- 1) 8) c_24 ) (* (/ (- 1) 8) c_25 x ) (* (/ (- 1) 8) c_26 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 7 1) (* (- 1) x ) ) 0) (>= (+ (* 5 1) (* 1 x ) ) 0) ) (>= (+ (* (/ 7 8) c_21 ) (* (/ 7 8) c_22 x ) (* (/ 7 8) c_23 x x ) (* (/ 1 8) c_24 ) (* (/ 1 8) c_25 x ) (* (/ 1 8) c_26 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 7 1) (* (- 1) x ) ) 0) (>= (+ (* 5 1) (* 1 x ) ) 0) ) (>= (+ (* (- 1) 1) (* 1 c_21 ) (* 1 c_22 x ) (* 1 c_23 x x ) (* (- 1) c_24 ) (* 1 c_25 ) (* (- 1) c_25 x ) (* (- 1) c_26 ) (* 2 c_26 x ) (* (- 1) c_26 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 7 1) (* (- 1) x ) ) 0) (>= (+ (* 5 1) (* 1 x ) ) 0) ) (>= (+ (* 1 c_24 ) (* 1 c_25 x ) (* 1 c_26 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 7 1) (* (- 1) x ) ) 0) (>= (+ (* 6 1) (* 1 x ) ) 0) ) (>= (+ (* (- 1) 1) (* (- 1) c_0 ) (* (- 1) c_1 x ) (* (- 1) c_2 x x ) (* 1 c_24 ) (* 1 c_25 x ) (* 1 c_26 x x ) ) 0) )))
(assert (forall ((x Real) ) (=> (and (>= (+ (* 7 1) (* (- 1) x ) ) 0) (>= (+ (* 6 1) (* 1 x ) ) 0) ) (>= (+ (* 1 c_0 ) (* 1 c_1 x ) (* 1 c_2 x x ) ) 0) )))
(check-sat)
(get-model)

