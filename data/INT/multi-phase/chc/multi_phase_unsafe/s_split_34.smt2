(set-logic HORN)
(declare-fun inv (Int Int) Bool)
(assert (forall ((y0 Int) (x0 Int)) (=> (and (= x0 0) (= y0 1)) (inv x0 y0))))
(assert (forall ((y1 Int) (x1 Int) (y0 Int) (x0 Int))
  (let ((a!1 (= y1 (ite (and (> x1 (- 100)) (< x1 100)) y0 (- y0)))))
    (=> (and (inv x0 y0) (= x1 (+ x0 y0)) a!1) (inv x1 y1)))))
(assert (forall ((x0 Int) (y0 Int))
  (let ((a!1 (and (inv x0 y0) (and (>= x0 (- 100)) (<= x0 100)))))
    (=> a!1 false))))
(check-sat)
