(set-logic HORN)
(declare-fun inv (Int Int Int Int) Bool)
(assert (forall ((v0 Int) (z0 Int) (y0 Int) (x0 Int))
  (=> (and (> x0 y0) (> y0 z0) (= v0 0)) (inv x0 y0 z0 v0))))
(assert (forall ((v1 Int)
         (z1 Int)
         (y1 Int)
         (x1 Int)
         (v0 Int)
         (y0 Int)
         (x0 Int)
         (z0 Int))
  (let ((a!1 (and (inv x0 y0 z0 v0)
                  (= x1 (+ x0 1))
                  (= y1 (+ y0 3))
                  (= z1 (+ z0 2))
                  (= v1 (ite (< x0 y0) (+ v0 1) v0)))))
    (=> a!1 (inv x1 y1 z1 v1)))))
(assert (forall ((v0 Int) (x0 Int) (z0 Int) (y0 Int))
  (=> (and (inv x0 y0 z0 v0) (> (- z0 x0) 72531) (not (> v0 0))) false)))
(check-sat)
