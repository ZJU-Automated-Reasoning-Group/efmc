(set-logic HORN)
(declare-fun inv ((_ BitVec 64) (_ BitVec 64) ) Bool)
(assert (forall ((x (_ BitVec 64)) (z (_ BitVec 64))) 
       (=> ( and ( bvugt x ( bvsub (_ bv0 64) (_ bv100 64) ) ) ( bvult x (_ bv200 64) ) ( bvugt z (_ bv100 64) ) ( bvult z (_ bv200 64) ) ) (inv x z))))
(assert (forall ((x (_ BitVec 64)) (z (_ BitVec 64)) (x! (_ BitVec 64)) (z! (_ BitVec 64))) 
       (=> (and (inv x z) ( let ( ( a!1 ( or ( and ( = x! ( bvadd x (_ bv1 64) ) ) ( = z! z ) ) ( and ( = x! ( bvsub x (_ bv1 64) ) ) ( = z! ( bvsub z (_ bv1 64) ) ) ) ) ) ) ( and ( bvult x (_ bv100 64) ) ( bvugt z (_ bv100 64) ) a!1 ) )) (inv x! z!))))
(assert (forall ((x (_ BitVec 64)) (z (_ BitVec 64))) 
       (=> (inv x z) ( or ( and ( bvult x (_ bv100 64) ) ( bvugt z (_ bv100 64) ) ) ( bvuge x (_ bv100 64) ) ( bvule z (_ bv100 64) ) ))))
(check-sat)
