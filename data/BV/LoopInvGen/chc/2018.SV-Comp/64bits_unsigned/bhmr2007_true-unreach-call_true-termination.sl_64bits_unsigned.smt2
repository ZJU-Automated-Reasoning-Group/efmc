(set-logic HORN)
(declare-fun inv ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) ) Bool)
(assert (forall ((i (_ BitVec 64)) (n (_ BitVec 64)) (a (_ BitVec 64)) (b (_ BitVec 64))) 
       (=> ( and ( = i (_ bv0 64) ) ( = a (_ bv0 64) ) ( = b (_ bv0 64) ) ( bvuge n (_ bv0 64) ) ) (inv i n a b))))
(assert (forall ((i (_ BitVec 64)) (n (_ BitVec 64)) (a (_ BitVec 64)) (b (_ BitVec 64)) (i! (_ BitVec 64)) (n! (_ BitVec 64)) (a! (_ BitVec 64)) (b! (_ BitVec 64))) 
       (=> (and (inv i n a b) ( let ( ( a!1 ( or ( and ( = a! ( bvadd a (_ bv1 64) ) ) ( = b! ( bvadd b (_ bv2 64) ) ) ) ( and ( = a! ( bvadd a (_ bv2 64) ) ) ( = b! ( bvadd b (_ bv1 64) ) ) ) ) ) ) ( and ( bvult i n ) a!1 ( = i! ( bvadd i (_ bv1 64) ) ) ( = n! n ) ) )) (inv i! n! a! b!))))
(assert (forall ((i (_ BitVec 64)) (n (_ BitVec 64)) (a (_ BitVec 64)) (b (_ BitVec 64))) 
       (=> (inv i n a b) ( or ( bvult i n ) ( = ( bvadd a b ) ( bvmul (_ bv3 64) n ) ) ))))
(check-sat)
