(set-logic HORN)
(declare-fun inv ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) ) Bool)
(assert (forall ((sn (_ BitVec 64)) (loop1 (_ BitVec 64)) (n1 (_ BitVec 64)) (x (_ BitVec 64))) 
       (=> ( and ( = sn (_ bv0 64) ) ( = x (_ bv0 64) ) ( bvuge loop1 (_ bv0 64) ) ( bvuge n1 (_ bv0 64) ) ) (inv sn loop1 n1 x))))
(assert (forall ((sn (_ BitVec 64)) (loop1 (_ BitVec 64)) (n1 (_ BitVec 64)) (x (_ BitVec 64)) (sn! (_ BitVec 64)) (loop1! (_ BitVec 64)) (n1! (_ BitVec 64)) (x! (_ BitVec 64))) 
       (=> (and (inv sn loop1 n1 x) ( and ( ite ( bvult x (_ bv10 64) ) ( = sn! ( bvadd sn (_ bv2 64) ) ) ( = sn! sn ) ) ( = x! ( bvadd x (_ bv1 64) ) ) ( = loop1! loop1 ) ( = n1! n1 ) )) (inv sn! loop1! n1! x!))))
(assert (forall ((sn (_ BitVec 64)) (loop1 (_ BitVec 64)) (n1 (_ BitVec 64)) (x (_ BitVec 64))) 
       (=> (inv sn loop1 n1 x) ( or ( = sn ( bvmul x (_ bv2 64) ) ) ( = sn (_ bv0 64) ) ))))
(check-sat)
