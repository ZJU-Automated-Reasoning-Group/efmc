(set-logic HORN)
(declare-fun inv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) ) Bool)
(assert (forall ((in (_ BitVec 32)) (inlen (_ BitVec 32)) (bufferlen (_ BitVec 32)) (buf (_ BitVec 32)) (buflim (_ BitVec 32))) 
       (=> ( and ( bvugt bufferlen (_ bv1 32) ) ( bvugt inlen (_ bv0 32) ) ( bvult bufferlen inlen ) ( = buf (_ bv0 32) ) ( = in (_ bv0 32) ) ( = buflim ( bvsub bufferlen (_ bv2 32) ) ) ) (inv in inlen bufferlen buf buflim))))
(assert (forall ((in (_ BitVec 32)) (inlen (_ BitVec 32)) (bufferlen (_ BitVec 32)) (buf (_ BitVec 32)) (buflim (_ BitVec 32)) (in! (_ BitVec 32)) (inlen! (_ BitVec 32)) (bufferlen! (_ BitVec 32)) (buf! (_ BitVec 32)) (buflim! (_ BitVec 32))) 
       (=> (and (inv in inlen bufferlen buf buflim) ( and ( not ( = buf buflim ) ) ( = buf! ( bvadd buf (_ bv1 32) ) ) ( = in! ( bvadd in (_ bv1 32) ) ) ( = inlen! inlen ) ( = bufferlen! bufferlen ) ( = buflim! buflim ) )) (inv in! inlen! bufferlen! buf! buflim!))))
(assert (forall ((in (_ BitVec 32)) (inlen (_ BitVec 32)) (bufferlen (_ BitVec 32)) (buf (_ BitVec 32)) (buflim (_ BitVec 32))) 
       (=> (inv in inlen bufferlen buf buflim) ( or ( = buf buflim ) ( and ( bvule (_ bv0 32) buf ) ( bvult buf bufferlen ) ) ))))
(check-sat)
