(set-logic HORN)
(declare-fun inv ((_ BitVec 32) (_ BitVec 32) ) Bool)
(assert (forall ((x (_ BitVec 32)) (z (_ BitVec 32))) 
       (=> ( and ( bvsgt x ( bvsub (_ bv0 32) (_ bv100 32) ) ) ( bvslt x (_ bv200 32) ) ( bvsgt z (_ bv100 32) ) ( bvslt z (_ bv200 32) ) ) (inv x z))))
(assert (forall ((x (_ BitVec 32)) (z (_ BitVec 32)) (x! (_ BitVec 32)) (z! (_ BitVec 32))) 
       (=> (and (inv x z) ( let ( ( a!1 ( or ( and ( = x! ( bvadd x (_ bv1 32) ) ) ( = z! z ) ) ( and ( = x! ( bvsub x (_ bv1 32) ) ) ( = z! ( bvsub z (_ bv1 32) ) ) ) ) ) ) ( and ( bvslt x (_ bv100 32) ) ( bvsgt z (_ bv100 32) ) a!1 ) )) (inv x! z!))))
(assert (forall ((x (_ BitVec 32)) (z (_ BitVec 32))) 
       (=> (inv x z) ( or ( and ( bvslt x (_ bv100 32) ) ( bvsgt z (_ bv100 32) ) ) ( bvsge x (_ bv100 32) ) ( bvsle z (_ bv100 32) ) ))))
(check-sat)
