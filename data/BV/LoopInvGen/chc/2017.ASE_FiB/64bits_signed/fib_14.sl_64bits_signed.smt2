(set-logic HORN)
(declare-fun inv ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) ) Bool)
(assert (forall ((a (_ BitVec 64)) (j (_ BitVec 64)) (m (_ BitVec 64))) 
       (=> ( and ( = a (_ bv0 64) ) ( bvsgt m (_ bv0 64) ) ( = j (_ bv1 64) ) ) (inv a j m))))
(assert (forall ((a (_ BitVec 64)) (j (_ BitVec 64)) (m (_ BitVec 64)) (a! (_ BitVec 64)) (j! (_ BitVec 64)) (m! (_ BitVec 64))) 
       (=> (and (inv a j m) ( or ( and ( bvsgt j m ) ( = a! a ) ( = j! j ) ( = m! m ) ) ( and ( bvsle j m ) ( = j! ( bvadd j (_ bv1 64) ) ) ( = a! ( bvadd a (_ bv1 64) ) ) ( = m! m ) ) ( and ( bvsle j m ) ( = j! ( bvadd j (_ bv1 64) ) ) ( = a! ( bvsub a (_ bv1 64) ) ) ( = m! m ) ) )) (inv a! j! m!))))
(assert (forall ((a (_ BitVec 64)) (j (_ BitVec 64)) (m (_ BitVec 64))) 
       (=> (inv a j m) ( => ( not ( bvsle j m ) ) ( and ( bvsge a ( bvsub (_ bv0 64) m ) ) ( bvsle a m ) ) ))))
(check-sat)
