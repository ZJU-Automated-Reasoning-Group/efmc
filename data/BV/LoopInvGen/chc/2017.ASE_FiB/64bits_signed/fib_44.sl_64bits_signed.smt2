(set-logic HORN)
(declare-fun inv ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) ) Bool)
(assert (forall ((i (_ BitVec 64)) (j (_ BitVec 64)) (n (_ BitVec 64)) (k (_ BitVec 64))) 
       (=> ( and ( or ( = n (_ bv1 64) ) ( = n (_ bv2 64) ) ) ( = i (_ bv0 64) ) ( = j (_ bv0 64) ) ) (inv i j n k))))
(assert (forall ((i (_ BitVec 64)) (j (_ BitVec 64)) (n (_ BitVec 64)) (k (_ BitVec 64)) (i! (_ BitVec 64)) (j! (_ BitVec 64)) (n! (_ BitVec 64)) (k! (_ BitVec 64))) 
       (=> (and (inv i j n k) ( or ( and ( bvsgt i k ) ( = i! i ) ( = j! j ) ( = n! n ) ( = k! k ) ) ( and ( bvsle i k ) ( = i! ( bvadd i (_ bv1 64) ) ) ( = j! ( bvadd j n ) ) ( = n! n ) ( = k! k ) ) )) (inv i! j! n! k!))))
(assert (forall ((i (_ BitVec 64)) (j (_ BitVec 64)) (n (_ BitVec 64)) (k (_ BitVec 64))) 
       (=> (inv i j n k) ( => ( bvsgt i k ) ( or ( not ( = n (_ bv1 64) ) ) ( = i j ) ) ))))
(check-sat)
