(set-logic HORN)
(declare-fun inv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) ) Bool)
(assert (forall ((x (_ BitVec 32)) (y (_ BitVec 32)) (i (_ BitVec 32)) (j (_ BitVec 32))) 
       (=> ( and ( = x i ) ( = y j ) ) (inv x y i j))))
(assert (forall ((x (_ BitVec 32)) (y (_ BitVec 32)) (i (_ BitVec 32)) (j (_ BitVec 32)) (x! (_ BitVec 32)) (y! (_ BitVec 32)) (i! (_ BitVec 32)) (j! (_ BitVec 32))) 
       (=> (and (inv x y i j) ( or ( and ( not ( = x (_ bv0 32) ) ) ( = x! ( bvsub x (_ bv1 32) ) ) ( = y! ( bvsub y (_ bv1 32) ) ) ( = i! i ) ( = j! j ) ) ( and ( = x (_ bv0 32) ) ( = x! x ) ( = y! y ) ( = i! i ) ( = j! j ) ) )) (inv x! y! i! j!))))
(assert (forall ((x (_ BitVec 32)) (y (_ BitVec 32)) (i (_ BitVec 32)) (j (_ BitVec 32))) 
       (=> (inv x y i j) ( => ( = x (_ bv0 32) ) ( or ( not ( = i j ) ) ( = y (_ bv0 32) ) ) ))))
(check-sat)
