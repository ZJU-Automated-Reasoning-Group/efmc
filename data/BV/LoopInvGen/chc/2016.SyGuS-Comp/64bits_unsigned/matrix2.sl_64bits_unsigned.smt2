(set-logic HORN)
(declare-fun inv ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) ) Bool)
(assert (forall ((m (_ BitVec 64)) (a (_ BitVec 64)) (j (_ BitVec 64)) (k (_ BitVec 64))) 
       (=> ( and ( or ( bvule a m ) ( = j (_ bv0 64) ) ) ( bvult j (_ bv1 64) ) ( = k (_ bv0 64) ) ) (inv m a j k))))
(assert (forall ((m (_ BitVec 64)) (a (_ BitVec 64)) (j (_ BitVec 64)) (k (_ BitVec 64)) (m! (_ BitVec 64)) (a! (_ BitVec 64)) (j! (_ BitVec 64)) (k! (_ BitVec 64))) 
       (=> (and (inv m a j k) ( or ( and ( = j! j ) ( bvult k (_ bv1 64) ) ( bvult m a! ) ( = m! a! ) ( = k! ( bvadd k (_ bv1 64) ) ) ) ( and ( = j! j ) ( bvult k (_ bv1 64) ) ( bvugt m a! ) ( = k! ( bvadd k (_ bv1 64) ) ) ) )) (inv m! a! j! k!))))
(assert (forall ((m (_ BitVec 64)) (a (_ BitVec 64)) (j (_ BitVec 64)) (k (_ BitVec 64))) 
       (=> (inv m a j k) ( or ( bvult k (_ bv1 64) ) ( bvult a m ) ( = j ( bvadd (_ bv1 64) ( bvnot (_ bv1 64) ) ) ) ))))
(check-sat)
