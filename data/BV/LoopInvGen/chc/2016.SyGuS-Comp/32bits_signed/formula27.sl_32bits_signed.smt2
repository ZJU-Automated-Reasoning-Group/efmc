(set-logic HORN)
(declare-fun inv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) ) Bool)
(assert (forall ((x1 (_ BitVec 32)) (x2 (_ BitVec 32)) (x3 (_ BitVec 32)) (x4 (_ BitVec 32)) (x5 (_ BitVec 32))) 
       (=> ( and ( = x1 (_ bv0 32) ) ( = x2 (_ bv0 32) ) ( = x3 (_ bv0 32) ) ( = x4 (_ bv0 32) ) ( = x5 (_ bv0 32) ) ) (inv x1 x2 x3 x4 x5))))
(assert (forall ((x1 (_ BitVec 32)) (x2 (_ BitVec 32)) (x3 (_ BitVec 32)) (x4 (_ BitVec 32)) (x5 (_ BitVec 32)) (x1! (_ BitVec 32)) (x2! (_ BitVec 32)) (x3! (_ BitVec 32)) (x4! (_ BitVec 32)) (x5! (_ BitVec 32))) 
       (=> (and (inv x1 x2 x3 x4 x5) ( and ( bvsle (_ bv0 32) x1! ) ( bvsle x1! ( bvadd x4! (_ bv1 32) ) ) ( = x2! x3! ) ( = (_ bv0 32) x5! ) ( or ( bvsle x2! ( bvadd (_ bv1 32) ( bvnot (_ bv1 32) ) ) ) ( bvsle x4! ( bvadd x2! (_ bv2 32) ) ) ) )) (inv x1! x2! x3! x4! x5!))))
(assert (forall ((x1 (_ BitVec 32)) (x2 (_ BitVec 32)) (x3 (_ BitVec 32)) (x4 (_ BitVec 32)) (x5 (_ BitVec 32))) 
       (=> (inv x1 x2 x3 x4 x5) ( and ( bvsle (_ bv0 32) x1 ) ( bvsle x1 ( bvadd x4 (_ bv1 32) ) ) ( = x2 x3 ) ( = (_ bv0 32) x5 ) ( or ( bvsle x2 ( bvadd (_ bv1 32) ( bvnot (_ bv1 32) ) ) ) ( bvsle x4 ( bvadd x2 (_ bv2 32) ) ) ) ))))
(check-sat)
