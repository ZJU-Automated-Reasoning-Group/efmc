(set-logic HORN)
(declare-fun inv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) ) Bool)
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32)) (m (_ BitVec 32))) 
       (=> ( and ( = x (_ bv1 32) ) ( = m (_ bv1 32) ) ) (inv x n m))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32)) (m (_ BitVec 32)) (x! (_ BitVec 32)) (n! (_ BitVec 32)) (m! (_ BitVec 32))) 
       (=> (and (inv x n m) ( let ( ( a!1 ( and ( bvslt x n ) ( = x! ( bvadd x (_ bv1 32) ) ) ( = n! n ) ) ) ) ( or ( and a!1 ( = m! m ) ) ( and a!1 ( = m! x ) ) ) )) (inv x! n! m!))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32)) (m (_ BitVec 32))) 
       (=> (inv x n m) ( not ( and ( bvsge x n ) ( bvsgt n (_ bv1 32) ) ( or ( bvsle n m ) ( bvslt m (_ bv1 32) ) ) ) ))))
(check-sat)
