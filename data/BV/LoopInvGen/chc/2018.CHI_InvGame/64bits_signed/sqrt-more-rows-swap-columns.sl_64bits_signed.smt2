(set-logic HORN)
(declare-fun inv ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64) ) Bool)
(assert (forall ((n (_ BitVec 64)) (a (_ BitVec 64)) (su (_ BitVec 64)) (t (_ BitVec 64))) 
       (=> ( and ( = a (_ bv0 64) ) ( = su (_ bv1 64) ) ( = t (_ bv1 64) ) ( bvsgt n (_ bv0 64) ) ) (inv n a su t))))
(assert (forall ((n (_ BitVec 64)) (a (_ BitVec 64)) (su (_ BitVec 64)) (t (_ BitVec 64)) (n! (_ BitVec 64)) (a! (_ BitVec 64)) (su! (_ BitVec 64)) (t! (_ BitVec 64))) 
       (=> (and (inv n a su t) ( and ( bvsle su n ) ( = n! n ) ( = a! ( bvadd a (_ bv1 64) ) ) ( = t! ( bvadd t (_ bv2 64) ) ) ( = su! ( bvadd su t! ) ) )) (inv n! a! su! t!))))
(assert (forall ((n (_ BitVec 64)) (a (_ BitVec 64)) (su (_ BitVec 64)) (t (_ BitVec 64))) 
       (=> (inv n a su t) ( or ( bvsle su n ) ( = su ( bvmul ( bvadd a (_ bv1 64) ) ( bvadd a (_ bv1 64) ) ) ) ))))
(check-sat)
