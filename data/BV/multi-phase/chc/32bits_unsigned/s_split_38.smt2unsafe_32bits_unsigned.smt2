(set-logic HORN)
(declare-fun inv ((_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((x (_ BitVec 32)) (y (_ BitVec 32)))
  (=> (and (= x #x0000c350) (= y #x00000000)) (inv x y))))
(assert (forall ((x (_ BitVec 32))
         (y (_ BitVec 32))
         (x! (_ BitVec 32))
         (y! (_ BitVec 32)))
  (let ((a!1 (and (inv x y)
                  (= x! (ite (bvuge y x) (bvadd x #x00000005) x))
                  (= y! (ite (bvuge y x) y (bvadd y #x00000001))))))
    (=> a!1 (inv x! y!)))))
(assert (forall ((x (_ BitVec 32)) (y (_ BitVec 32)))
  (let ((a!1 (bvadd x (bvmul (bvadd #x00000001 (bvnot #x00000001)) y))))
  (let ((a!2 (not (and (not (bvule y #x0000c350)) (bvule a!1 #x00000005)))))
    (=> (inv x y) a!2)))))
(check-sat)
