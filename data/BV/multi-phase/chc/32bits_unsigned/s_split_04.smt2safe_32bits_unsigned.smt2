(set-logic HORN)
(declare-fun inv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((y (_ BitVec 32)) (x (_ BitVec 32)) (z (_ BitVec 32)))
  (=> (and (= x #x00000000) (= y #x00000000) (= z #x00000000)) (inv y x z))))
(assert (forall ((y (_ BitVec 32))
         (x (_ BitVec 32))
         (z (_ BitVec 32))
         (x! (_ BitVec 32))
         (y! (_ BitVec 32))
         (z! (_ BitVec 32)))
  (let ((a!1 (and (inv y x z)
                  (= x! (bvadd x #x00000001))
                  (= y! (bvadd y x))
                  (= z! (ite (bvugt y x) (bvadd z #x00000001) z)))))
    (=> a!1 (inv x! y! z!)))))
(assert (forall ((y (_ BitVec 32)) (x (_ BitVec 32)) (z (_ BitVec 32)))
  (=> (inv y x z) (not (and (bvuge x #x0034adcd) (bvule z #x00000000))))))
(check-sat)
