(set-logic HORN)
(declare-fun inv ((_ BitVec 64) (_ BitVec 64)) Bool)
(assert (forall ((x (_ BitVec 64)) (y (_ BitVec 64)))
  (let ((a!1 (and (= x (bvadd #x0000000000000001 (bvnot #x0000000000002710)))
                  (= y #x0000000000000000))))
    (=> a!1 (inv x y)))))
(assert (forall ((x (_ BitVec 64))
         (y (_ BitVec 64))
         (x! (_ BitVec 64))
         (y! (_ BitVec 64)))
  (let ((a!1 (= y!
                (ite (bvuge y x)
                     (bvadd #x0000000000000001 (bvnot x))
                     (bvadd y #x0000000000000002)))))
  (let ((a!2 (and (inv x y)
                  (= x! (ite (bvuge y x) (bvadd x #x0000000000000001) x))
                  a!1)))
    (=> a!2 (inv x! y!))))))
(assert (forall ((x (_ BitVec 64)) (y (_ BitVec 64)))
  (let ((a!1 (not (bvuge x
                         (bvadd #x0000000000000001 (bvnot #x0000000000000001) y)))))
    (=> (inv x y) (not (and (bvuge x #x0000000000000000) a!1))))))
(check-sat)
