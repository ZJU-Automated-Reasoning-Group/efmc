(set-logic HORN)
(declare-fun inv ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)
(assert (forall ((v (_ BitVec 64))
         (x (_ BitVec 64))
         (z (_ BitVec 64))
         (w (_ BitVec 64)))
  (=> (and (bvugt x z) (= v #x0000000000000000) (= w #x0000000000000000))
      (inv v x z w))))
(assert (forall ((v (_ BitVec 64))
         (x (_ BitVec 64))
         (z (_ BitVec 64))
         (w (_ BitVec 64))
         (x! (_ BitVec 64))
         (z! (_ BitVec 64))
         (v! (_ BitVec 64))
         (w! (_ BitVec 64)))
  (let ((a!1 (and (inv v x z w)
                  (= x! (bvadd x #x0000000000000001))
                  (= z! (bvadd z #x0000000000000002))
                  (= v! (ite (bvult x z) (bvadd v #x0000000000000001) v))
                  (= w! (ite (bvult x z) w (bvadd w #x0000000000000001))))))
    (=> a!1 (inv x! z! v! w!)))))
(assert (forall ((v (_ BitVec 64))
         (x (_ BitVec 64))
         (z (_ BitVec 64))
         (w (_ BitVec 64)))
  (let ((a!1 (not (and (not (bvule v #x00000000000003e8))
                       (not (bvule w #x0000000000000000))))))
    (=> (inv v x z w) a!1))))
(check-sat)
