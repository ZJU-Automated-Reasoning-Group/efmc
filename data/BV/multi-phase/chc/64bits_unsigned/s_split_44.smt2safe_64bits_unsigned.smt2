(set-logic HORN)
(declare-fun inv ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)
(assert (forall ((x (_ BitVec 64)) (y (_ BitVec 64)) (z (_ BitVec 64)))
  (=> (and (= x #x0000000000000000)
           (= y #x00000000000003e8)
           (= z #x00000000000007d0))
      (inv x y z))))
(assert (forall ((x (_ BitVec 64))
         (y (_ BitVec 64))
         (z (_ BitVec 64))
         (x! (_ BitVec 64))
         (y! (_ BitVec 64))
         (z! (_ BitVec 64)))
  (let ((a!1 (and (inv x y z)
                  (= x! (bvadd #x0000000000000001 x))
                  (= y!
                     (ite (bvuge x #x00000000000003e8)
                          (bvadd y #x0000000000000001)
                          y))
                  (= z!
                     (ite (bvuge y #x00000000000007d0)
                          (bvadd z #x0000000000000001)
                          z)))))
    (=> a!1 (inv x! y! z!)))))
(assert (forall ((x (_ BitVec 64)) (y (_ BitVec 64)) (z (_ BitVec 64)))
  (let ((a!1 (not (and (bvuge y #x00000000000007d0) (not (= x z))))))
    (=> (inv x y z) a!1))))
(check-sat)
