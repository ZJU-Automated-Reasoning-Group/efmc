(set-logic HORN)
(declare-fun inv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((x (_ BitVec 32)) (y (_ BitVec 32)) (z (_ BitVec 32)))
  (=> (and (= x #x00000000) (= y #x000003e8) (= z #x000007d0)) (inv x y z))))
(assert (forall ((x (_ BitVec 32))
         (y (_ BitVec 32))
         (z (_ BitVec 32))
         (x! (_ BitVec 32))
         (y! (_ BitVec 32))
         (z! (_ BitVec 32)))
  (let ((a!1 (and (inv x y z)
                  (= x! (bvadd #x00000001 x))
                  (= y! (ite (bvsge x #x000003e8) (bvadd y #x00000001) y))
                  (= z! (ite (bvsge y #x000007d0) (bvadd z #x00000001) z)))))
    (=> a!1 (inv x! y! z!)))))
(assert (forall ((x (_ BitVec 32)) (y (_ BitVec 32)) (z (_ BitVec 32)))
  (let ((a!1 (not (and (bvsge y #x000007d0) (not (= x z))))))
    (=> (inv x y z) a!1))))
(check-sat)
