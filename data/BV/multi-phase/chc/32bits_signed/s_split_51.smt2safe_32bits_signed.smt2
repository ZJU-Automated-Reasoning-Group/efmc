(set-logic HORN)
(declare-fun inv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((x (_ BitVec 32)) (y (_ BitVec 32)) (z (_ BitVec 32)))
  (=> (and (= x #x00000000) (= y #x00000d05) (= z #x00001a0a)) (inv x y z))))
(assert (forall ((x (_ BitVec 32))
         (y (_ BitVec 32))
         (z (_ BitVec 32))
         (x! (_ BitVec 32))
         (y! (_ BitVec 32))
         (z! (_ BitVec 32)))
  (let ((a!1 (and (inv x y z)
                  (= x! (bvadd x #x00000001))
                  (= y! (ite (bvslt x #x00000d05) y (bvadd y #x00000001)))
                  (= z! (ite (bvsge y #x00001a0a) (bvadd z #x00000001) z)))))
    (=> a!1 (inv x! y! z!)))))
(assert (forall ((x (_ BitVec 32)) (y (_ BitVec 32)) (z (_ BitVec 32)))
  (let ((a!1 (not (and (= x #x0000270f) (not (= z x))))))
    (=> (inv x y z) a!1))))
(check-sat)
