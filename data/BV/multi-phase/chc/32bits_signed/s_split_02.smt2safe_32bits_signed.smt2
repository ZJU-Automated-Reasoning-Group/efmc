(set-logic HORN)
(declare-fun inv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((y (_ BitVec 32)) (x (_ BitVec 32)) (z (_ BitVec 32)))
  (=> (and (= x #x00000000) (= y #x000000c8) (= z #x00000190)) (inv y x z))))
(assert (forall ((y (_ BitVec 32))
         (x (_ BitVec 32))
         (z (_ BitVec 32))
         (x! (_ BitVec 32))
         (y! (_ BitVec 32))
         (z! (_ BitVec 32)))
  (let ((a!1 (and (inv y x z)
                  (= x! (bvadd #x00000001 x))
                  (= y! (ite (bvslt x #x000000c8) (bvadd y #x00000001) y))
                  (= z! (ite (bvslt x #x000000c8) z (bvadd z #x00000002))))))
    (=> a!1 (inv x! y! z!)))))
(assert (forall ((y (_ BitVec 32)) (x (_ BitVec 32)) (z (_ BitVec 32)))
  (let ((a!1 (and (bvsge y #x00000190) (not (= z (bvmul #x00000002 x))))))
    (=> (inv y x z) (not a!1)))))
(check-sat)
