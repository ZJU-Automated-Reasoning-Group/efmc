(set-logic HORN)
(declare-fun inv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((y (_ BitVec 32)) (x (_ BitVec 32)) (z (_ BitVec 32)))
  (=> (and (= x #x00000001) (= y #x00000000) (= z #x00000000)) (inv y x z))))
(assert (forall ((y (_ BitVec 32))
         (x (_ BitVec 32))
         (z (_ BitVec 32))
         (x! (_ BitVec 32))
         (y! (_ BitVec 32))
         (z! (_ BitVec 32)))
  (let ((a!1 (and (inv y x z)
                  (= x! (bvadd #x00000001 (bvnot x)))
                  (= y! (ite (bvsgt x #x00000000) (bvadd y #x00000001) y))
                  (= z! (ite (bvsgt x #x00000000) z (bvadd z #x00000001))))))
    (=> a!1 (inv x! y! z!)))))
(assert (forall ((y (_ BitVec 32)) (x (_ BitVec 32)) (z (_ BitVec 32)))
  (=> (inv y x z)
      (not (and (= x #x00000001) (= y #x1467b6dd) (= #x1467b6dd z))))))
(check-sat)
