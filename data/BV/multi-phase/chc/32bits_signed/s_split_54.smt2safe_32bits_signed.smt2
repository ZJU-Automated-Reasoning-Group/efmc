(set-logic HORN)
(declare-fun inv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((y (_ BitVec 32)) (x (_ BitVec 32)) (z (_ BitVec 32)))
  (=> (and (= x #x00000000) (= y #x00001f40) (= z #x00000000)) (inv y x z))))
(assert (forall ((y (_ BitVec 32))
         (x (_ BitVec 32))
         (z (_ BitVec 32))
         (x! (_ BitVec 32))
         (y! (_ BitVec 32))
         (z! (_ BitVec 32)))
  (let ((a!1 (and (inv y x z)
                  (= x! (bvadd x #x00000001))
                  (= y!
                     (ite (bvsge x #x00001f40)
                          (bvadd y #x00000001)
                          (bvsub y #x00000001)))
                  (= z!
                     (ite (bvslt x #x00001f40)
                          (bvadd z #x00000001)
                          (bvsub z #x00000001))))))
    (=> a!1 (inv x! y! z!)))))
(assert (forall ((y (_ BitVec 32)) (x (_ BitVec 32)) (z (_ BitVec 32)))
  (let ((a!1 (and (= x #x00003e80)
                  (not (and (= y #x00001f40) (= z #x00000000))))))
    (=> (inv y x z) (not a!1)))))
(check-sat)
